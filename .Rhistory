p
p <- data_date %>% ggplot() +
geom_rect(mapping=aes(xmin=1, xmax=2, ymin=1, ymax=2, fill=value, text=""),
color=NA, alpha=1) +
facet_geo(~ code, grid = grid) +
labs(x='', y='') +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
strip.placement = "bottom",
plot.title = element_text(hjust = 5),
strip.background = element_blank(),
strip.text.x = element_blank(),
line = element_blank()
# plot.margin = margin(-2, "points"),
# panel.spacing = unit(-2, "points")
)
if (dynam) {
p <- p + scale_fill_gradientn(name='Темпы роста, % г/г',
colours=c("#e83131", "#ffbfbf", "dark gray", "#c3ffbf","#3AE831"),
na.value="#D0D0D0",
oob=oob_sqiush,
# trans="pseudo_log",
values=rescale(c(-10,-0.00000001,0,0.000000001,10)),
n.breaks=4,
minor_breaks = NULL,
limits=c(-10,10))
# p <- p + scale_fill_manual(name='Темпы роста производства, %',
#                               values=c("1" = "#FF0000", "2" = "#e83131", "3" = "#ffbfbf", "4" = "#c3ffbf", "5" = "#3AE831", "6" = "#0dff00"),
#                               na.value="#D0D0D0")
# p <- p + binned_scale("fill",
#                           "foo",
#                           ggplot2:::binned_pal(scales::manual_pal(c("#FF0000","#e83131","#ffbfbf","#c3ffbf", "#3AE831", "#0dff00"))),
#                           guide="coloursteps",
#                           breaks=c(-10,-5,0,5,10),
#                           limits=c(-10, 10),
#                           oob=oob_squish,
#                           na.value="#D0D0D0",
#                       show.limits = TRUE,
#)
} else {
p <- p + scale_fill_gradient(name=paste('Производство, ', ed, sep=''), na.value="#D0D0D0", high="#85D6FF", low = "#0078D4")
}
p
p <- p + scale_fill_gradientn(name='Темпы роста, % г/г',
colours=c("#e83131", "#ffbfbf", "dark gray", "#c3ffbf","#3AE831"),
na.value="#D0D0D0",
oob=oob_squish,
# trans="pseudo_log",
values=rescale(c(-10,-0.00000001,0,0.000000001,10)),
n.breaks=4,
minor_breaks = NULL,
limits=c(-10,10))
p
runApp()
shiny::runApp()
runApp()
shiny::runApp()
data <- loadR('Сигареты и папиросы'), where='data_output/supply_analysis/')
data <- loadR('Сигареты и папиросы', where='data_output/supply_analysis/')
model_name <- data$category
ed <- data$ed
rub <- '\U20BD'
# supply volumes
supply_month <- format(round(last(data$df_sa$total)), big.mark = " ")
# Get date of the latest supply point
label_current <- date_to_lab(last(data$df_sa$date))
prod_price_names <- data$prod_price_names
date_to_lab <- function(date) {
paste(day(as.Date(date)), ' ', labelset[month(as.Date(date))], '-', substr(year(as.Date(date)), 3, 4), sep =
'')
}
model_name <- data$category
ed <- data$ed
rub <- '\U20BD'
# supply volumes
supply_month <- format(round(last(data$df_sa$total)), big.mark = " ")
# Get date of the latest supply point
label_current <- date_to_lab(last(data$df_sa$date))
prod_price_names <- data$prod_price_names
# internal production
production_dyn_prev <- round(
(last(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value) / nth(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value, -2) - 1) * 100, 2
)
production_dyn_prev
data$df_sa$value
data$df_sa[data$df_sa$type=='Внутреннее производство',]$value
last(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value)
nth(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value, -2)
production_dyn_yoy <- round((last(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value) / nth(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value, -13) - 1) * 100, 2)
label_prev <- date_to_lab(nth(data$df_sa$date,-13))
runApp()
df <- data$production[0,-3]
runApp()
runApp()
data
runApp()
data <- loadR('Воды минеральные', where='data_output/supply_analysis/')
!is.na(data$df_retail_sa)
data$df_retail_sa
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
data <- loadR('Сигареты и папиросы', where='data_output/supply_analysis/')
sa
if (sa) {
df <- data$df_retail_sa
} else {
df <- data$df_retail
}
p <- df %>% ggplot() + geom_line(aes(x=date, y=value, col='blue', text=paste0('Розничные продажи',
', ',
as.yearmon(date),
': ',
format(round(value, 2), big.mark=" "),
'руб.'),
group=1)) +
xlab('') +
scale_y_continuous(labels = function(x) format(x, big.mark=" ")) +
ylab('руб.') +
theme(legend.position='none')
t <- ggplotly(p, tooltip='text') %>%
config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)")
t
retail_trade <- function(data, sa=TRUE) {
if (sa) {
df <- data$df_retail_sa
} else {
df <- data$df_retail
}
p <- df %>% ggplot() + geom_line(aes(x=date, y=value, col='blue', text=paste0('Розничные продажи',
', ',
as.yearmon(date),
': ',
format(round(value, 2), big.mark=" "),
'руб.'),
group=1)) +
xlab('') +
scale_y_continuous(labels = function(x) format(x, big.mark=" ")) +
ylab('руб.') +
theme(legend.position='none')
t <- ggplotly(p, tooltip='text') %>%
config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)")
t
# colors <- adjustcolor(brewer.pal(n = 9, name = 'Set1'), alpha.f=0.6)
# p <- ggplot(df) +
#   geom_bar(aes(fill=OKATO, y=value, x=date, text=paste0('Продажи, ', OKATO, ', ', as.yearmon(date), ':', format(value, big.mark=" "), ' руб.')), stat="identity") +
#   geom_line(aes(y=total, x=date, color='Итого', text=paste0('Продажи, всего, ', as.yearmon(date), ': ', format(total, big.mark=" "), ' руб.'),
#                 group=1),
#             size=1.2) +
#   xlab('') +
#   ylab(ed) +
#   scale_fill_manual(values = colors, name='') +
#   scale_x_date(breaks='6 months', labels = scales::label_date("%b-%y"), expand=expansion(add = 10)) +
#   scale_color_manual(values = c("Итого" = "#008272"), name='') +
#   theme(legend.position="bottom")
# t <- ggplotly(p, tooltip='text') %>%
#   config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)") %>%
#   layout(legend = list(orientation = "h", x = 0, y = -0.1))
# for (i in 1:length(t$x$data)) {
#   t$x$data[[i]]$name <- str_sub(str_replace_all(t$x$data[[i]]$name, regex('[//(//)0-9]*'), ''), 1, -2)
# }
# t
}
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
market <- loadR('Сигареты и папиросы', where='data_output/supply_analysis/')
View(market)
runApp()
market <- loadR('Сигареты и папиросы', where='data_output/supply_analysis/')
View(market)
data=market
sa=TRUE
if (sa) {
df <- data$df_retail_sa
} else {
df <- data$df_retail
}
df <- data$df_retail_FD
#                                                                               format(round(value, 2), big.mark=" "),
#                                                                               'руб.'),
#                                      group=1)) +
#   xlab('') +
#   scale_y_continuous(labels = function(x) format(x, big.mark=" ")) +
#   ylab('руб.') +
#   theme(legend.position='none')
# t <- ggplotly(p, tooltip='text') %>%
#   config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)")
# t
colors <- adjustcolor(brewer.pal(n = 9, name = 'Set1'), alpha.f=0.6)
p <- ggplot(df) +
geom_bar(aes(fill=OKATO, y=value, x=date, text=paste0('Продажи, ', OKATO, ', ', as.yearmon(date), ':', format(value, big.mark=" "), ' руб.')), stat="identity") +
geom_line(aes(y=total, x=date, color='Итого', text=paste0('Продажи, всего, ', as.yearmon(date), ': ', format(total, big.mark=" "), ' руб.'),
group=1),
size=1.2) +
xlab('') +
scale_fill_manual(values = colors, name='') +
scale_x_date(breaks='6 months', labels = scales::label_date("%b-%y"), expand=expansion(add = 10)) +
scale_color_manual(values = c("Итого" = "#008272"), name='') +
theme(legend.position="bottom")
p
View(df)
runApp()
df <- data$df_retail_FD %>%
group_by(date) %>%
mutate(total = sum(value, na.rm=TRUE))
View(df)
#                                                                               format(round(value, 2), big.mark=" "),
#                                                                               'руб.'),
#                                      group=1)) +
#   xlab('') +
#   scale_y_continuous(labels = function(x) format(x, big.mark=" ")) +
#   ylab('руб.') +
#   theme(legend.position='none')
# t <- ggplotly(p, tooltip='text') %>%
#   config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)")
# t
colors <- adjustcolor(brewer.pal(n = 9, name = 'Set1'), alpha.f=0.6)
p <- ggplot(df) +
geom_bar(aes(fill=OKATO, y=value, x=date, text=paste0('Продажи, ', OKATO, ', ', as.yearmon(date), ':', format(value, big.mark=" "), ' руб.')), stat="identity") +
geom_line(aes(y=total, x=date, color='Итого', text=paste0('Продажи, всего, ', as.yearmon(date), ': ', format(total, big.mark=" "), ' руб.'),
group=1),
size=1.2) +
xlab('') +
scale_fill_manual(values = colors, name='') +
scale_x_date(breaks='6 months', labels = scales::label_date("%b-%y"), expand=expansion(add = 10)) +
scale_color_manual(values = c("Итого" = "#008272"), name='') +
theme(legend.position="bottom")
p
runApp()
df <- data$df_retail_FD %>%
group_by(date) %>%
mutate(total = sum(value, na.rm=TRUE))
#                                                                               format(round(value, 2), big.mark=" "),
#                                                                               'руб.'),
#                                      group=1)) +
#   xlab('') +
#   scale_y_continuous(labels = function(x) format(x, big.mark=" ")) +
#   ylab('руб.') +
#   theme(legend.position='none')
# t <- ggplotly(p, tooltip='text') %>%
#   config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)")
# t
colors <- adjustcolor(brewer.pal(n = 9, name = 'Set1'), alpha.f=0.6)
p <- ggplot(df) +
geom_bar(aes(fill=OKATO, y=value, x=date, text=paste0('Продажи, ', OKATO, ', ', as.yearmon(date), ':', format(value, big.mark=" "), ' руб.')), stat="identity") +
geom_line(aes(y=total, x=date, color='Итого', text=paste0('Продажи, всего, ', as.yearmon(date), ': ', format(total, big.mark=" "), ' руб.'),
group=1),
size=1.2) +
xlab('') +
scale_fill_manual(values = colors, name='') +
scale_x_date(breaks='6 months', labels = scales::label_date("%b-%y"), expand=expansion(add = 10)) +
scale_color_manual(values = c("Итого" = "#008272"), name='') +
theme(legend.position="bottom")
t <- ggplotly(p, tooltip='text') %>%
config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)") %>%
layout(legend = list(orientation = "h", x = 0, y = -0.1))
for (i in 1:length(t$x$data)) {
t$x$data[[i]]$name <- str_sub(str_replace_all(t$x$data[[i]]$name, regex('[//(//)0-9]*'), ''), 1, -2)
}
t
runApp()
retail_trade <- function(data, sa=TRUE) {
if (sa) {
df <- data$df_retail_sa
} else {
df <- data$df_retail
}
df <- data$df_retail_FD %>%
group_by(date) %>%
mutate(total = sum(value, na.rm=TRUE))
#
# p <- df %>% ggplot() + geom_line(aes(x=date, y=value, col='blue', text=paste0('Розничные продажи',
#                                                                               ', ',
#                                                                               as.yearmon(date),
#                                                                               ': ',
#                                                                               format(round(value, 2), big.mark=" "),
#                                                                               'руб.'),
#                                      group=1)) +
#   xlab('') +
#   scale_y_continuous(labels = function(x) format(x, big.mark=" ")) +
#   ylab('руб.') +
#   theme(legend.position='none')
# t <- ggplotly(p, tooltip='text') %>%
#   config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)")
# t
colors <- adjustcolor(brewer.pal(n = 9, name = 'Set1'), alpha.f=0.6)
p <- ggplot(df) +
geom_bar(aes(fill=OKATO, y=value, x=date, text=paste0('Продажи, ', OKATO, ', ', as.yearmon(date), ':', format(value, big.mark=" "), ' руб.')), stat="identity") +
geom_line(aes(y=total, x=date, color='Итого', text=paste0('Продажи, всего, ', as.yearmon(date), ': ', format(total, big.mark=" "), ' руб.'),
group=1),
size=1.2) +
xlab('') +
scale_fill_manual(values = colors, name='') +
scale_x_date(breaks='6 months', labels = scales::label_date("%b-%y"), expand=expansion(add = 10)) +
scale_color_manual(values = c("Итого" = "#008272"), name='') +
theme(legend.position="bottom")
t <- ggplotly(p, tooltip='text') %>%
config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)") %>%
layout(legend = list(orientation = "h", x = 0, y = -0.1))
for (i in 1:length(t$x$data)) {
t$x$data[[i]]$name <- str_sub(str_replace_all(t$x$data[[i]]$name, regex('[//(//)0-9]*'), ''), 1, -2)
}
t
}
runApp()
runApp()
df <- data$df_retail_FD %>%
group_by(date) %>%
mutate(total = sum(value, na.rm=TRUE))
View(df)
colors <- adjustcolor(brewer.pal(n = 9, name = 'Set1'), alpha.f=0.6)
p <- ggplot(df) +
geom_bar(aes(fill=OKATO, y=value, x=date, text=paste0('Продажи, ', OKATO, ', ', as.yearmon(date), ':', format(value, big.mark=" "), ' руб.')), stat="identity") +
geom_line(aes(y=total, x=date, color='Итого', text=paste0('Продажи, всего, ', as.yearmon(date), ': ', format(total, big.mark=" "), ' руб.'),
group=1),
size=1.2) +
xlab('') +
scale_fill_manual(values = colors, name='') +
scale_x_date(breaks='6 months', labels = scales::label_date("%b-%y"), expand=expansion(add = 10)) +
scale_color_manual(values = c("Итого" = "#008272"), name='') +
theme(legend.position="bottom")
p
t <- ggplotly(p, tooltip='text') %>%
config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)") %>%
layout(legend = list(orientation = "h", x = 0, y = -0.1))
for (i in 1:length(t$x$data)) {
t$x$data[[i]]$name <- str_sub(str_replace_all(t$x$data[[i]]$name, regex('[//(//)0-9]*'), ''), 1, -2)
}
t
shiny::runApp()
runApp()
market <- loadR('Сигареты и папиросы', where='data_output/supply_analysis/')
View(market)
install.packages("waterfalls")
library(waterfalls)
data=market
data$delta_tax
data$delta_tax[2]
d_L <- data$CobbDouglasCalc$L1-data$CobbDouglasCalc$L0
d_L
data$CobbDouglasCalc$delta
data=loadR('Сигареты и папиросы', where='data_output/supply_analysis/')
d_tax <- data$delta_tax[2]
d_L <- data$CobbDouglasCalc$L1-data$CobbDouglasCalc$L0
data$CobbDouglasCalc
d_L <- data$CobbDouglasCalc$L1-data$CobbDouglasCalc$L0
data=loadR('Сигареты и папиросы', where='data_output/supply_analysis/')
d_tax <- data$delta_tax[2]
d_L <- data$CobbDouglasCalc$L1-data$CobbDouglasCalc$L0
d_fot <- data$CobbDouglasCalc
d_fot <- data$CobbDouglasCalc$w * d_L
d_fot
data$delta_tax[2]
d_tax <- (data$delta_tax[2])*4
d_L <- data$CobbDouglasCalc$L1-data$CobbDouglasCalc$L0
d_fot <- (data$CobbDouglasCalc$w * d_L)*12
d_fot
d_tax
data.frame(
type=c('Налоговые поступления', 'ФОТ'),
value=c(d_tax, d_fot)
)
df <- data.frame(
type=c('Налоговые поступления', 'ФОТ'),
value=c(d_tax, d_fot)
)
waterfall(df) +
theme_minimal()
data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w
data$CobbDouglasCalc$Y1 - (data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w)
data=loadR('Сигареты и папиросы', where='data_output/supply_analysis/')
data$CobbDouglasCalc$Y1 - (data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w)
d_pi <- data$CobbDouglasCalc$Y1 - (data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w)
d_pi <- data$CobbDouglasCalc$Y1 - (data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w)
df <- data.frame(
type=c('Налоговые поступления', 'Прибыль', 'ФОТ'),
value=c(d_tax, d_pi, d_fot)
)
waterfall(df) +
theme_minimal()
d_pi <- data$CobbDouglasCalc$Y1 - (data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w*1.3)
df <- data.frame(
type=c('Налоговые поступления', 'Прибыль', 'ФОТ'),
value=c(d_tax, d_pi, d_fot)
)
waterfall(df) +
theme_minimal()
(data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w)
data$CobbDouglasCalc$Y1
d_pi
data$delta_tax[2]
data$delta_tax[2]
data$delta_tax[2]
data$delta_tax[2]
data$delta_tax[2]
data$delta_tax[2]
data$delta_tax[2]
data$delta_tax[2]
data$delta_tax[2]
data$delta_tax[2]
d_pi <- data$CobbDouglasCalc$Y1*4 - (data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r*4 + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w*4)
d_pi
data$CobbDouglasCalc$Y1
d_pi <- data$CobbDouglasCalc$Y1 - (data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w*4)
d_pi
d_pi <- data$CobbDouglasCalc$Y1 - (data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r*4 + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w*4)
d_pi
*data$CobbDouglasCalc$r*4
data$CobbDouglasCalc$r*4
(data$CobbDouglasCalc$r*4+data$depr)
depr_q <- (1 + data$depr)^(1/4)
depr_q
depr_q <- (1 + data$depr)^(1/4) - 1
depr_q
d_L <- data$CobbDouglasCalc$L1-data$CobbDouglasCalc$L0
counterfeit_plot <- function(data) {
df <- data$counterfeit %>%
drop_na()
value <- last(df %>%
pull(counterfeit_smooth))
date <- last(df %>%
pull(date))
fig <- plot_ly(
domain = list(x = c(0.15, 0.85), y = c(0.6, 0.85)),
value = value,
# title = list(text = paste0('Доля нелегального оборота\n',as.yearqtr(date)), font=list(size=14, family='Segoe UI', color='#323130')),
type = "indicator",
mode = "gauge+number",
gauge = list(
axis = list(range = list(NULL, 100), ticks='outside', ticklen=5, tickcolor='#323130', tickfont=list(size=14, family='Segoe UI', color='#323130'), ticksuffix='%'),
bar = list(color='#e83131'),
borderwidth = 0,
bordercolor = '#0078D4',
threshold = list(line = list(color='#0078D4'), thickness=15, value = value)
),
number = list(
suffix='%',
prefix='     ',
font = list(size=18, family='Segoe UI', color='#323130')
)
)
current_val <- fig
current_val
p <- df %>%
ggplot() +
geom_line(aes(x=date, y=counterfeit, group=1, text=NULL), alpha=0.15) +
geom_line(aes(x=date, y=counterfeit_smooth, group=2, text=paste0('Доля нелегального оборота',
', ',
as.yearmon(date),
': ',
format(round(counterfeit_smooth, 1), big.mark=" "),
'%')), alpha=1, col="#0078D4", size=1 ) +
theme(legend.position='bottom') +
xlab('') +
ylab('%')
val_history <- ggplotly(p, tooltip='text')
annotations = list(
list(
x = 0.5,
y = 0.9,
text = paste0('Доля нелегального оборота, ',as.yearqtr(date)),
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
),
list(
x = 0.5,
y = 0.45,
text = "Динамика доли нелегального оборота",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE
)
)
combo <- subplot(current_val, val_history, nrows  = 2, margin = 0.05) %>%
config(displayModeBar = F, locale = 'ru') %>% layout(annotations = annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = F, width = 500, height = 500, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo
# d_tax <- (data$delta_tax[4])
# d_L <- data
# d_fot <- (data$CobbDouglasCalc$w * d_L)*12
# depr_q <- (1 + data$depr)^(1/4) - 1
# d_pi <- data$CobbDouglasCalc$Y1 - (data$CobbDouglasCalc$K1*data$CobbDouglasCalc$r*4 + data$CobbDouglasCalc$L1*data$CobbDouglasCalc$w*4)
# df <- data.frame(
#   type=c('Налоговые поступления', 'Прибыль', 'ФОТ'),
#   value=c(d_tax, d_pi, d_fot)
#            )
# waterfall(df) +
#   theme_minimal()
}
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
