# Prepare color palette
# palette <-
#   adjustcolor(brewer.pal(n = 9, name = 'Set1'), alpha.f = 0.6)
# hse_green = palette[3]
# hse_red   =  palette[1]
# hse_blue  = palette[2]
# Prepare list of models
model_groups <- read_xlsx('data_output/models/model_groups.xlsx')
models <- substr(model_groups$model, 1, nchar(model_groups$model)-6)
groups_counter <- model_groups %>%
group_by(group) %>%
summarise(n = n())
groups_counter <- groups_counter[match(unique(model_groups$group), groups_counter$group),]
groups_counter$cumsum <- cumsum(groups_counter$n)
groups_nav <- list()
for (i in 1:nrow(groups_counter)) {
elem <- list(key = paste('g', i, sep=''), name = groups_counter$group[i], startIndex = groups_counter$cumsum[i] - groups_counter$n[i], count = groups_counter$n[i], isCollapsed = ifelse(i==1, FALSE, TRUE))
groups_nav[[i]] <- elem
}
prods_list <- as.list(models)
options <- list(list(key = models[1], text = models[1]))
for (i in 2:length(models)) {
elem <- list(key = models[i], text = models[i])
options[[i]] <- elem
}
# Prepare list of supply markets for analysis
market_groups <- read_xlsx('data_output/supply_analysis/market_groups.xlsx')
markets <- substr(market_groups$model, 1, nchar(market_groups$model)-6)
groups_counter <- market_groups %>%
group_by(group) %>%
summarise(n = n())
groups_counter <- groups_counter[match(unique(market_groups$group), groups_counter$group),]
groups_counter$cumsum <- cumsum(groups_counter$n)
groups_nav_supply <- list()
for (i in 1:nrow(groups_counter)) {
elem <- list(key = paste('g', i, sep=''), name = groups_counter$group[i], startIndex = groups_counter$cumsum[i] - groups_counter$n[i], count = groups_counter$n[i], isCollapsed = ifelse(i==1, FALSE, TRUE))
groups_nav_supply[[i]] <- elem
}
prods_list_supply <- as.list(markets)
options <- list(list(key = markets[1], text = markets[1]))
for (i in 2:length(markets)) {
elem <- list(key = markets[i], text = markets[i])
options[[i]] <- elem
}
market_models_corresp <- read_xlsx('data_output/correspondence.xlsx')
# rus_map <- readRDS('data_output/federal_districts.rds')
date_last <- as.Date('2022-02-01')
date_last_trade <- as.Date('2022-01-01')
#---------------------------------------------------------------------------------------------------
# Define helper functions
#---------------------------------------------------------------------------------------------------
# Create value box
makeCard <-
function(title,
tooltip = NULL,
content = NULL,
title2 = NULL,
tooltip2 = NULL,
content2 = NULL,
size = 12,
style = NULL,
card_type = 'neutral',
icon) {
div(
class = glue("card card-{card_type} ms-depth-8 ms-sm{size} ms-xl{size}"),
style = style,
content,
Stack(
tokens = list(childrenGap = 5),
Stack(
horizontal = TRUE,
Text(variant = "xxLarge", title, block = TRUE, nowrap = TRUE),
if (!is.null(tooltip)) {
TooltipHost(
content = tooltip,
delay = 0,
Text(FontIcon(iconName = 'info'))
)
}
),
if (is.null(title2)) {
tagList(br(), br())
},
content2,
if (!is.null(title2)) {
Stack(
horizontal = TRUE,
Text(variant = "xxLarge", title2, block = TRUE, nowrap = TRUE),
if (!is.null(tooltip2)) {
TooltipHost(
content = tooltip2,
delay = 0,
Text(FontIcon(iconName = 'info'))
)
}
)        },
div(class = 'icon',
tags$i(class = paste('fa', icon, sep = ' '
)))
)
)
}
# Create a single page
makePage <- function (title, subtitle, contents) {
tagList(div(
class = "page-title",
span(title, class = "ms-fontSize-32 ms-fontWeight-semibold", style =
"color: #323130"),
br(),
span(subtitle, class = "ms-fontSize-20 ms-fontWeight-regular", style =
"color: #605E5C; margin-top: 14px;")
),
div(contents, class='page-content'))
}
model_name <- data$category
ed <- last(unique(data$prod_price$OKEI))
View(data$prod_price)
runApp()
unique(data$prod_price$OKEI)
unique(data$prod_price$OKEI)
last(unique(data$prod_price$OKEI))
model_name <- data$category
ed <- last(unique(data$prod_price$OKEI))
ed <- case_when(
ed=='Тысяча штук' ~ 'тыс. шт.',
ed=='литр' ~ 'л.',
ed=='Тонна;^метрическая тонна (1000 кг)' ~ 'т.'
)
ed
ed <- unique(data$prod_price$OKEI)
which <- which(is.na(ed))
which
n <- which(is.na(ed))
ed <- ed[-n]
ed <- last(ed)
ed
ed <- unique(last(ed))
ed
model_name <- data$category
ed <- unique(data$prod_price$OKEI)
n <- which(is.na(ed))
ed <- ed[-n]
ed <- unique(last(ed))
ed
ed <- unique(data$prod_price$OKEI)
n <- which(is.na(ed))
ed <- ed[-n]
ed <- unique(last(ed))
length(ed)>1
print('DIFFERENT MEASURES FOR PRODUCER PRICES. CORRECT')
length(ed)>1
model_name <- data$category
ed <- unique(data$prod_price$OKEI)
n <- which(is.na(ed))
ed <- ed[-n]
ed <- unique(last(ed))
ed
prod_price_names <- data$prod_price_names
prod_price_names
data$prod_price
View(data$prod_price)
pp_dataset <- data$prod_price %>%
group_by(date) %>%
summarize(value = mean(value, na.rm=TRUE))
View(pp_dataset)
ts.plot(pp_dataset$value)
price = round(last(ppdataset$value), 2)
price = round(last(pp_dataset$value), 2)
# Get date of the latest data point for PPI and create a label
label_current <- date_to_lab(last(pp_dataset$date))
date_to_lab <- function(date) {
paste(day(as.Date(date)), ' ', labelset[month(as.Date(date))], '-', substr(year(as.Date(date)), 3, 4), sep =
'')
}
# trade prices
label_current_trade <-date_to_lab(last(data$trade_price$date))
price_ex <- round(last(data$trade_price[data$trade_price$NAPR=='ЭК',]$mean_price_rub))
price_im <- round(last(data$trade_price[data$trade_price$NAPR=='ИМ',]$mean_price_rub))
# producer inflation
label_prev <- date_to_lab(nth(pp_dataset$date, -2))
label_yoy <- date_to_lab(nth(pp_dataset$date, -13))
ppi_prev <- round((last(pp_dataset$value) / nth(pp_dataset$value, -2) - 1) * 100, 2)
ppi_yoy <- round((last(pp_dataset$value) / nth(pp_dataset$value, -13) -1 ) * 100, 2)
ppi_yoy
# Stack 3 cards together
Stack(
div(model_name, style = 'margin-bottom:10px;', class = 'ms-fontSize-20 ms-fontWeight-regular'),
Stack(
horizontal = TRUE,
horizontalAlign = 'space-between',
tokens = list(childrenGap = 10),
# current producer price card
makeCard(
title = paste(
price,
' ',
rub,
'/',
ed,
sep = ''
),
content2 = span(Text(paste('Цены производителей, ', label_current, sep = ''), variant = 'mediumPlus'),
tags$sup(TooltipHost(
content = span(paste0('До 2017 года по ОКПД: "', prod_price_names[[1]], '"'), tags$br(), paste0('После 2017 года по ОКПД2: "', prod_price_names[[2]], '"')),
delay = 0,
Text(FontIcon(iconName = 'info'))
))),
size = 10,
card_type = 'neutral',
icon = 'fa-coins'
),
# y-o-y card
makeCard(
title = paste(
ifelse(ppi_yoy > 0, '+', ''),
ppi_yoy,
'%',
sep = ''
),
tooltip = paste(label_current, '/', label_yoy),
content = Text('Инфляция цен производителей, г/г:', variant = 'mediumPlus'),
content2 = Text('Инфляция цен производителей, м/м:', variant = 'mediumPlus'),
title2 = paste(
ifelse(ppi_prev > 0, '+', ''),
ppi_prev,
'%',
sep = ''
),
tooltip2 = paste(label_current, ' / ', label_prev, sep =
''),
size = 10,
card_type = ifelse(ppi_yoy > 0, "bad", "good"),
icon = ifelse(ppi_yoy > 0, "fa-arrow-up", "fa-arrow-down")
),
# export-import price
makeCard(
content = Text(paste0('Цены экспортеров, ',label_current_trade,':'), variant = 'mediumPlus'),
content2 = Text(paste0('Цены импортеров, ',label_current_trade,':'), variant = 'mediumPlus'),
title = paste(
price_ex,
' ',
rub,
'/',
ed,
sep = ''
),
title2 = paste(
price_im,
' ',
rub,
'/',
ed,
sep = ''
),
size = 10,
card_type = 'neutral',
icon = 'fa-coins'
)
)
)
rub <- '\U20BD'
# Stack 3 cards together
Stack(
div(model_name, style = 'margin-bottom:10px;', class = 'ms-fontSize-20 ms-fontWeight-regular'),
Stack(
horizontal = TRUE,
horizontalAlign = 'space-between',
tokens = list(childrenGap = 10),
# current producer price card
makeCard(
title = paste(
price,
' ',
rub,
'/',
ed,
sep = ''
),
content2 = span(Text(paste('Цены производителей, ', label_current, sep = ''), variant = 'mediumPlus'),
tags$sup(TooltipHost(
content = span(paste0('До 2017 года по ОКПД: "', prod_price_names[[1]], '"'), tags$br(), paste0('После 2017 года по ОКПД2: "', prod_price_names[[2]], '"')),
delay = 0,
Text(FontIcon(iconName = 'info'))
))),
size = 10,
card_type = 'neutral',
icon = 'fa-coins'
),
# y-o-y card
makeCard(
title = paste(
ifelse(ppi_yoy > 0, '+', ''),
ppi_yoy,
'%',
sep = ''
),
tooltip = paste(label_current, '/', label_yoy),
content = Text('Инфляция цен производителей, г/г:', variant = 'mediumPlus'),
content2 = Text('Инфляция цен производителей, м/м:', variant = 'mediumPlus'),
title2 = paste(
ifelse(ppi_prev > 0, '+', ''),
ppi_prev,
'%',
sep = ''
),
tooltip2 = paste(label_current, ' / ', label_prev, sep =
''),
size = 10,
card_type = ifelse(ppi_yoy > 0, "bad", "good"),
icon = ifelse(ppi_yoy > 0, "fa-arrow-up", "fa-arrow-down")
),
# export-import price
makeCard(
content = Text(paste0('Цены экспортеров, ',label_current_trade,':'), variant = 'mediumPlus'),
content2 = Text(paste0('Цены импортеров, ',label_current_trade,':'), variant = 'mediumPlus'),
title = paste(
price_ex,
' ',
rub,
'/',
ed,
sep = ''
),
title2 = paste(
price_im,
' ',
rub,
'/',
ed,
sep = ''
),
size = 10,
card_type = 'neutral',
icon = 'fa-coins'
)
)
)
# Get date of the latest data point for PPI and create a label
label_current <- date_to_lab(last(pp_dataset$date))
prod_price_names <- pp_dataset_names
# trade prices
label_current_trade <-date_to_lab(last(data$trade_price$date))
price_ex <- round(last(data$trade_price[data$trade_price$NAPR=='ЭК',]$mean_price_rub))
price_im <- round(last(data$trade_price[data$trade_price$NAPR=='ИМ',]$mean_price_rub))
# producer inflation
label_prev <- date_to_lab(nth(pp_dataset$date, -2))
label_yoy <- date_to_lab(nth(pp_dataset$date, -13))
ppi_prev <- round((last(pp_dataset$value) / nth(pp_dataset$value, -2) - 1) * 100, 2)
ppi_yoy <- round((last(pp_dataset$value) / nth(pp_dataset$value, -13) -1 ) * 100, 2)
# Stack 3 cards together
Stack(
div(model_name, style = 'margin-bottom:10px;', class = 'ms-fontSize-20 ms-fontWeight-regular'),
Stack(
horizontal = TRUE,
horizontalAlign = 'space-between',
tokens = list(childrenGap = 10),
# current producer price card
makeCard(
title = paste(
price,
' ',
rub,
'/',
ed,
sep = ''
),
content2 = span(Text(paste('Цены производителей, ', label_current, sep = ''), variant = 'mediumPlus'),
tags$sup(TooltipHost(
content = span(paste0('До 2017 года по ОКПД: "', prod_price_names[[1]], '"'), tags$br(), paste0('После 2017 года по ОКПД2: "', prod_price_names[[2]], '"')),
delay = 0,
Text(FontIcon(iconName = 'info'))
))),
size = 10,
card_type = 'neutral',
icon = 'fa-coins'
),
# y-o-y card
makeCard(
title = paste(
ifelse(ppi_yoy > 0, '+', ''),
ppi_yoy,
'%',
sep = ''
),
tooltip = paste(label_current, '/', label_yoy),
content = Text('Инфляция цен производителей, г/г:', variant = 'mediumPlus'),
content2 = Text('Инфляция цен производителей, м/м:', variant = 'mediumPlus'),
title2 = paste(
ifelse(ppi_prev > 0, '+', ''),
ppi_prev,
'%',
sep = ''
),
tooltip2 = paste(label_current, ' / ', label_prev, sep =
''),
size = 10,
card_type = ifelse(ppi_yoy > 0, "bad", "good"),
icon = ifelse(ppi_yoy > 0, "fa-arrow-up", "fa-arrow-down")
),
# export-import price
makeCard(
content = Text(paste0('Цены экспортеров, ',label_current_trade,':'), variant = 'mediumPlus'),
content2 = Text(paste0('Цены импортеров, ',label_current_trade,':'), variant = 'mediumPlus'),
title = paste(
price_ex,
' ',
rub,
'/',
ed,
sep = ''
),
title2 = paste(
price_im,
' ',
rub,
'/',
ed,
sep = ''
),
size = 10,
card_type = 'neutral',
icon = 'fa-coins'
)
)
)
# Stack 3 cards together
a = Stack(
div(model_name, style = 'margin-bottom:10px;', class = 'ms-fontSize-20 ms-fontWeight-regular'),
Stack(
horizontal = TRUE,
horizontalAlign = 'space-between',
tokens = list(childrenGap = 10),
# current producer price card
makeCard(
title = paste(
price,
' ',
rub,
'/',
ed,
sep = ''
),
content2 = span(Text(paste('Цены производителей, ', label_current, sep = ''), variant = 'mediumPlus'),
tags$sup(TooltipHost(
content = span(paste0('До 2017 года по ОКПД: "', prod_price_names[[1]], '"'), tags$br(), paste0('После 2017 года по ОКПД2: "', prod_price_names[[2]], '"')),
delay = 0,
Text(FontIcon(iconName = 'info'))
))),
size = 10,
card_type = 'neutral',
icon = 'fa-coins'
),
# y-o-y card
makeCard(
title = paste(
ifelse(ppi_yoy > 0, '+', ''),
ppi_yoy,
'%',
sep = ''
),
tooltip = paste(label_current, '/', label_yoy),
content = Text('Инфляция цен производителей, г/г:', variant = 'mediumPlus'),
content2 = Text('Инфляция цен производителей, м/м:', variant = 'mediumPlus'),
title2 = paste(
ifelse(ppi_prev > 0, '+', ''),
ppi_prev,
'%',
sep = ''
),
tooltip2 = paste(label_current, ' / ', label_prev, sep =
''),
size = 10,
card_type = ifelse(ppi_yoy > 0, "bad", "good"),
icon = ifelse(ppi_yoy > 0, "fa-arrow-up", "fa-arrow-down")
),
# export-import price
makeCard(
content = Text(paste0('Цены экспортеров, ',label_current_trade,':'), variant = 'mediumPlus'),
content2 = Text(paste0('Цены импортеров, ',label_current_trade,':'), variant = 'mediumPlus'),
title = paste(
price_ex,
' ',
rub,
'/',
ed,
sep = ''
),
title2 = paste(
price_im,
' ',
rub,
'/',
ed,
sep = ''
),
size = 10,
card_type = 'neutral',
icon = 'fa-coins'
)
)
)
print(a)
eval(a)
model_name
runApp()
runApp()
View(data$trade_price)
price_ex <- round(last(data$trade_price[data$trade_price$NAPR=='ЭК',]$mean_price_rub))
price_im <- round(last(data$trade_price[data$trade_price$NAPR=='ИМ',]$mean_price_rub))
price_ex
price_im
runApp()
