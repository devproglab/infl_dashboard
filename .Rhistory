plot.margin = margin(-2, "points"),
panel.spacing = unit(-2, "points")
)
p
p <- data_date %>% ggplot() +
geom_rect(mapping=aes(xmin=1, xmax=2, ymin=1, ymax=2, fill=value, text=""),
color=NA, alpha=1) +
facet_geo(~ code, grid = grid) +
labs(x='', y='') +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
strip.placement = "bottom",
plot.title = element_text(hjust = 5),
strip.background = element_blank(),
strip.text.x = element_blank(),
line = element_blank()
# plot.margin = margin(-2, "points"),
# panel.spacing = unit(-2, "points")
)
p
if (dynam) {
p <- p + scale_fill_gradientn(name='Темпы роста, % г/г',
colours=c("#e83131", "#ffbfbf", "white", "#c3ffbf","#3AE831"),
na.value="#D0D0D0",
oob=oob_squish,
# trans="pseudo_log",
values=rescale(c(-10,-0.00000001,0,0.000000001,10)),
n.breaks=4,
minor_breaks = NULL,
limits=c(-10,10))
# p <- p + scale_fill_manual(name='Темпы роста производства, %',
#                               values=c("1" = "#FF0000", "2" = "#e83131", "3" = "#ffbfbf", "4" = "#c3ffbf", "5" = "#3AE831", "6" = "#0dff00"),
#                               na.value="#D0D0D0")
# p <- p + binned_scale("fill",
#                           "foo",
#                           ggplot2:::binned_pal(scales::manual_pal(c("#FF0000","#e83131","#ffbfbf","#c3ffbf", "#3AE831", "#0dff00"))),
#                           guide="coloursteps",
#                           breaks=c(-10,-5,0,5,10),
#                           limits=c(-10, 10),
#                           oob=oob_squish,
#                           na.value="#D0D0D0",
#                       show.limits = TRUE,
#)
} else {
p <- p + scale_fill_gradient(name=paste('Производство, ', ed, sep=''), na.value="#D0D0D0", high="#85D6FF", low = "#0078D4")
}
p
p <- data_date %>% ggplot() +
geom_rect(mapping=aes(xmin=1, xmax=2, ymin=1, ymax=2, fill=value, text=""),
color=NA, alpha=1) +
facet_geo(~ code, grid = grid) +
labs(x='', y='') +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
strip.placement = "bottom",
plot.title = element_text(hjust = 5),
strip.background = element_blank(),
strip.text.x = element_blank(),
line = element_blank()
# plot.margin = margin(-2, "points"),
# panel.spacing = unit(-2, "points")
)
p
if (dynam) {
p <- p + scale_fill_gradientn(name='Темпы роста, % г/г',
colours=c("#e83131", "#ffbfbf", "white", "#c3ffbf","#3AE831"),
na.value="#D0D0D0",
oob=oob_squish,
# trans="pseudo_log",
values=rescale(c(-10,-0.00000001,0,0.000000001,10)),
n.breaks=4,
minor_breaks = NULL,
limits=c(-10,10))
# p <- p + scale_fill_manual(name='Темпы роста производства, %',
#                               values=c("1" = "#FF0000", "2" = "#e83131", "3" = "#ffbfbf", "4" = "#c3ffbf", "5" = "#3AE831", "6" = "#0dff00"),
#                               na.value="#D0D0D0")
# p <- p + binned_scale("fill",
#                           "foo",
#                           ggplot2:::binned_pal(scales::manual_pal(c("#FF0000","#e83131","#ffbfbf","#c3ffbf", "#3AE831", "#0dff00"))),
#                           guide="coloursteps",
#                           breaks=c(-10,-5,0,5,10),
#                           limits=c(-10, 10),
#                           oob=oob_squish,
#                           na.value="#D0D0D0",
#                       show.limits = TRUE,
#)
} else {
p <- p + scale_fill_gradient(name=paste('Производство, ', ed, sep=''), na.value="#D0D0D0", high="#85D6FF", low = "#0078D4")
}
if (!level_fed) {
p <- p + geom_text(aes(x = 1.5, y = 1.5, label = name,
text=paste0(name_long, ', ', as.yearmon(date_choice), ': ', ifelse(is.na(value),
'нет данных',
paste0(round(value, 1), ifelse(dynam,
'%',
paste0(' ', ed))
)
)
)
), col="white", size=4)
} else {
p <- p + geom_text(aes(x = 1.5, y = 1.5, label = paste0(name_short, '\n', FD),
text=paste0(FD, ', ', as.yearmon(date_choice), ': ', ifelse(is.na(value),
'нет данных',
paste0(round(value, 1), ifelse(dynam,
'%',
paste0(' ', ed))
)
)
)
), col="white", size=4)
}
p <- ggplotly(p, height=600, tooltip='text') %>%
config(doubleClick = F, displayModeBar = F) %>% layout(dragmode=FALSE, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
xaxis = list(showgrid = FALSE, showline=FALSE, fixedrange = TRUE), yaxis = list(showgrid = FALSE, showline=FALSE, fixedrange = TRUE)) %>%
config(locale = 'ru')
p
date_choice
date_choice='2022-02-01'
ed <- data$ed
if (!level_fed) df <- data$df_reg %>% mutate(value = ifelse(value==0, NA, value)) else df <- data$df_FD %>% mutate(value = ifelse(value==0, NA, value))
last(df$date)
if (length(date_choice)==0) {
date_choice = last(df$date)
}
date_choice=floor_date(as.Date(date_choice), unit='months')
# conversion to necessary frequency
if (type=='q') {
laglen <- 4
date_choice=floor_date(as.Date(date_choice), unit='quarter')
df <- df %>%
as_tsibble(index = date, key=OKATO) %>%
index_by(yq = ~ yearquarter(.)) %>%
as_tibble() %>%
group_by(OKATO, yq) %>%
summarise(value = sum(value, na.rm=TRUE), across()) %>%
select(-date) %>%
rename("date"="yq") %>%
distinct() %>%
mutate(date=as.Date(date))
} else if (type=='y') {
laglen <- 1
date_choice=floor_date(as.Date(date_choice), unit='year')
df <- df %>%
as_tsibble(index = date, key=OKATO) %>%
index_by(yq = ~ year(.)) %>%
as_tibble() %>%
group_by(OKATO, yq) %>%
summarise(value = sum(value, na.rm=TRUE), across()) %>%
select(-date) %>%
rename("date"="yq") %>%
distinct() %>%
mutate(date=as.Date(paste0(date,'-01-01')))
} else {
laglen <- 12
}
if (!level_fed) {
grid <- read.table('data_output/rus_grid_reg2.csv', header=TRUE, sep=',') %>%
mutate(code = ifelse(nchar(code)==10, paste0('0', code), code)) %>%
select(-code_FD, -FD) %>% rename("name" = "name_short")
if (dynam) {
data_date <- df %>% group_by(OKATO_id) %>% mutate(value = (value/lag(value, laglen) - 1)*100 ) %>%
filter(date == date_choice) %>%
right_join(grid, by=c("OKATO_id" = "code")) %>% select(-row, -col) %>% rename("code" = "OKATO_id")
} else {
data_date <- df %>%
filter(date == date_choice) %>%
right_join(grid, by=c("OKATO_id" = "code")) %>% select(-row, -col) %>% rename("code" = "OKATO_id")
}
}
if (level_fed) {
grid <- read.table('data_output/rus_grid_reg2.csv', header=TRUE, sep=',') %>%
mutate(code = ifelse(nchar(code)==10, paste0('0', code), code)) %>%
mutate(code_FD = ifelse(nchar(code_FD)==2, paste0('0', code_FD), code_FD))
if (dynam) {
data_date <- df %>% group_by(OKATO_id) %>% mutate(value = (value/lag(value, laglen) - 1)*100 ) %>%
filter(date == date_choice) %>%
right_join(grid, by=c("OKATO_id" = "code_FD")) %>% select(-row, -col)
} else {
data_date <- df %>%
filter(date == date_choice) %>%
right_join(grid, by=c("OKATO_id" = "code_FD"))
}
grid <- grid %>% select(-code_FD) %>% rename("name" = "FD")
}
p <- data_date %>% ggplot() +
geom_rect(mapping=aes(xmin=1, xmax=2, ymin=1, ymax=2, fill=value, text=""),
color=NA, alpha=1) +
facet_geo(~ code, grid = grid) +
labs(x='', y='') +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
strip.placement = "bottom",
plot.title = element_text(hjust = 5),
strip.background = element_blank(),
strip.text.x = element_blank(),
line = element_blank()
# plot.margin = margin(-2, "points"),
# panel.spacing = unit(-2, "points")
)
p
if (dynam) {
p <- p + scale_fill_gradientn(name='Темпы роста, % г/г',
colours=c("#e83131", "#ffbfbf", "white", "#c3ffbf","#3AE831"),
na.value="#D0D0D0",
oob=oob_squish,
# trans="pseudo_log",
values=rescale(c(-10,-0.00000001,0,0.000000001,10)),
n.breaks=4,
minor_breaks = NULL,
limits=c(-10,10))
# p <- p + scale_fill_manual(name='Темпы роста производства, %',
#                               values=c("1" = "#FF0000", "2" = "#e83131", "3" = "#ffbfbf", "4" = "#c3ffbf", "5" = "#3AE831", "6" = "#0dff00"),
#                               na.value="#D0D0D0")
# p <- p + binned_scale("fill",
#                           "foo",
#                           ggplot2:::binned_pal(scales::manual_pal(c("#FF0000","#e83131","#ffbfbf","#c3ffbf", "#3AE831", "#0dff00"))),
#                           guide="coloursteps",
#                           breaks=c(-10,-5,0,5,10),
#                           limits=c(-10, 10),
#                           oob=oob_squish,
#                           na.value="#D0D0D0",
#                       show.limits = TRUE,
#)
} else {
p <- p + scale_fill_gradient(name=paste('Производство, ', ed, sep=''), na.value="#D0D0D0", high="#85D6FF", low = "#0078D4")
}
p
p <- data_date %>% ggplot() +
geom_rect(mapping=aes(xmin=1, xmax=2, ymin=1, ymax=2, fill=value, text=""),
color=NA, alpha=1) +
facet_geo(~ code, grid = grid) +
labs(x='', y='') +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
strip.placement = "bottom",
plot.title = element_text(hjust = 5),
strip.background = element_blank(),
strip.text.x = element_blank(),
line = element_blank()
# plot.margin = margin(-2, "points"),
# panel.spacing = unit(-2, "points")
)
if (dynam) {
p <- p + scale_fill_gradientn(name='Темпы роста, % г/г',
colours=c("#e83131", "#ffbfbf", "white", "#c3ffbf","#3AE831"),
na.value="#D0D0D0",
oob=oob_keep,
# trans="pseudo_log",
values=rescale(c(-10,-0.00000001,0,0.000000001,10)),
n.breaks=4,
minor_breaks = NULL,
limits=c(-10,10))
# p <- p + scale_fill_manual(name='Темпы роста производства, %',
#                               values=c("1" = "#FF0000", "2" = "#e83131", "3" = "#ffbfbf", "4" = "#c3ffbf", "5" = "#3AE831", "6" = "#0dff00"),
#                               na.value="#D0D0D0")
# p <- p + binned_scale("fill",
#                           "foo",
#                           ggplot2:::binned_pal(scales::manual_pal(c("#FF0000","#e83131","#ffbfbf","#c3ffbf", "#3AE831", "#0dff00"))),
#                           guide="coloursteps",
#                           breaks=c(-10,-5,0,5,10),
#                           limits=c(-10, 10),
#                           oob=oob_squish,
#                           na.value="#D0D0D0",
#                       show.limits = TRUE,
#)
} else {
p <- p + scale_fill_gradient(name=paste('Производство, ', ed, sep=''), na.value="#D0D0D0", high="#85D6FF", low = "#0078D4")
}
p
p <- data_date %>% ggplot() +
geom_rect(mapping=aes(xmin=1, xmax=2, ymin=1, ymax=2, fill=value, text=""),
color=NA, alpha=1) +
facet_geo(~ code, grid = grid) +
labs(x='', y='') +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
strip.placement = "bottom",
plot.title = element_text(hjust = 5),
strip.background = element_blank(),
strip.text.x = element_blank(),
line = element_blank()
# plot.margin = margin(-2, "points"),
# panel.spacing = unit(-2, "points")
)
p
if (dynam) {
p <- p + scale_fill_gradientn(name='Темпы роста, % г/г',
colours=c("#e83131", "#ffbfbf", "white", "#c3ffbf","#3AE831"),
na.value="#D0D0D0",
# oob=oob_keep,
# trans="pseudo_log",
values=rescale(c(-10,-0.00000001,0,0.000000001,10)),
n.breaks=4,
minor_breaks = NULL,
limits=c(-10,10))
# p <- p + scale_fill_manual(name='Темпы роста производства, %',
#                               values=c("1" = "#FF0000", "2" = "#e83131", "3" = "#ffbfbf", "4" = "#c3ffbf", "5" = "#3AE831", "6" = "#0dff00"),
#                               na.value="#D0D0D0")
# p <- p + binned_scale("fill",
#                           "foo",
#                           ggplot2:::binned_pal(scales::manual_pal(c("#FF0000","#e83131","#ffbfbf","#c3ffbf", "#3AE831", "#0dff00"))),
#                           guide="coloursteps",
#                           breaks=c(-10,-5,0,5,10),
#                           limits=c(-10, 10),
#                           oob=oob_squish,
#                           na.value="#D0D0D0",
#                       show.limits = TRUE,
#)
} else {
p <- p + scale_fill_gradient(name=paste('Производство, ', ed, sep=''), na.value="#D0D0D0", high="#85D6FF", low = "#0078D4")
}
[]
p
p <- data_date %>% ggplot() +
geom_rect(mapping=aes(xmin=1, xmax=2, ymin=1, ymax=2, fill=value, text=""),
color=NA, alpha=1) +
facet_geo(~ code, grid = grid) +
labs(x='', y='') +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
strip.placement = "bottom",
plot.title = element_text(hjust = 5),
strip.background = element_blank(),
strip.text.x = element_blank(),
line = element_blank()
# plot.margin = margin(-2, "points"),
# panel.spacing = unit(-2, "points")
)
if (dynam) {
p <- p + scale_fill_gradientn(name='Темпы роста, % г/г',
colours=c("#e83131", "#ffbfbf", "dark gray", "#c3ffbf","#3AE831"),
na.value="#D0D0D0",
oob=oob_sqiush,
# trans="pseudo_log",
values=rescale(c(-10,-0.00000001,0,0.000000001,10)),
n.breaks=4,
minor_breaks = NULL,
limits=c(-10,10))
# p <- p + scale_fill_manual(name='Темпы роста производства, %',
#                               values=c("1" = "#FF0000", "2" = "#e83131", "3" = "#ffbfbf", "4" = "#c3ffbf", "5" = "#3AE831", "6" = "#0dff00"),
#                               na.value="#D0D0D0")
# p <- p + binned_scale("fill",
#                           "foo",
#                           ggplot2:::binned_pal(scales::manual_pal(c("#FF0000","#e83131","#ffbfbf","#c3ffbf", "#3AE831", "#0dff00"))),
#                           guide="coloursteps",
#                           breaks=c(-10,-5,0,5,10),
#                           limits=c(-10, 10),
#                           oob=oob_squish,
#                           na.value="#D0D0D0",
#                       show.limits = TRUE,
#)
} else {
p <- p + scale_fill_gradient(name=paste('Производство, ', ed, sep=''), na.value="#D0D0D0", high="#85D6FF", low = "#0078D4")
}
p
p <- p + scale_fill_gradientn(name='Темпы роста, % г/г',
colours=c("#e83131", "#ffbfbf", "dark gray", "#c3ffbf","#3AE831"),
na.value="#D0D0D0",
oob=oob_squish,
# trans="pseudo_log",
values=rescale(c(-10,-0.00000001,0,0.000000001,10)),
n.breaks=4,
minor_breaks = NULL,
limits=c(-10,10))
p
runApp()
shiny::runApp()
runApp()
shiny::runApp()
data <- loadR('Сигареты и папиросы'), where='data_output/supply_analysis/')
data <- loadR('Сигареты и папиросы', where='data_output/supply_analysis/')
model_name <- data$category
ed <- data$ed
rub <- '\U20BD'
# supply volumes
supply_month <- format(round(last(data$df_sa$total)), big.mark = " ")
# Get date of the latest supply point
label_current <- date_to_lab(last(data$df_sa$date))
prod_price_names <- data$prod_price_names
date_to_lab <- function(date) {
paste(day(as.Date(date)), ' ', labelset[month(as.Date(date))], '-', substr(year(as.Date(date)), 3, 4), sep =
'')
}
model_name <- data$category
ed <- data$ed
rub <- '\U20BD'
# supply volumes
supply_month <- format(round(last(data$df_sa$total)), big.mark = " ")
# Get date of the latest supply point
label_current <- date_to_lab(last(data$df_sa$date))
prod_price_names <- data$prod_price_names
# internal production
production_dyn_prev <- round(
(last(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value) / nth(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value, -2) - 1) * 100, 2
)
production_dyn_prev
data$df_sa$value
data$df_sa[data$df_sa$type=='Внутреннее производство',]$value
last(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value)
nth(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value, -2)
production_dyn_yoy <- round((last(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value) / nth(data$df_sa[data$df_sa$type=='Внутреннее производство',]$value, -13) - 1) * 100, 2)
label_prev <- date_to_lab(nth(data$df_sa$date,-13))
runApp()
df <- data$production[0,-3]
runApp()
runApp()
data
runApp()
data <- loadR('Воды минеральные', where='data_output/supply_analysis/')
!is.na(data$df_retail_sa)
data$df_retail_sa
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
data <- loadR('Сигареты и папиросы', where='data_output/supply_analysis/')
sa
if (sa) {
df <- data$df_retail_sa
} else {
df <- data$df_retail
}
p <- df %>% ggplot() + geom_line(aes(x=date, y=value, col='blue', text=paste0('Розничные продажи',
', ',
as.yearmon(date),
': ',
format(round(value, 2), big.mark=" "),
'руб.'),
group=1)) +
xlab('') +
scale_y_continuous(labels = function(x) format(x, big.mark=" ")) +
ylab('руб.') +
theme(legend.position='none')
t <- ggplotly(p, tooltip='text') %>%
config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)")
t
retail_trade <- function(data, sa=TRUE) {
if (sa) {
df <- data$df_retail_sa
} else {
df <- data$df_retail
}
p <- df %>% ggplot() + geom_line(aes(x=date, y=value, col='blue', text=paste0('Розничные продажи',
', ',
as.yearmon(date),
': ',
format(round(value, 2), big.mark=" "),
'руб.'),
group=1)) +
xlab('') +
scale_y_continuous(labels = function(x) format(x, big.mark=" ")) +
ylab('руб.') +
theme(legend.position='none')
t <- ggplotly(p, tooltip='text') %>%
config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)")
t
# colors <- adjustcolor(brewer.pal(n = 9, name = 'Set1'), alpha.f=0.6)
# p <- ggplot(df) +
#   geom_bar(aes(fill=OKATO, y=value, x=date, text=paste0('Продажи, ', OKATO, ', ', as.yearmon(date), ':', format(value, big.mark=" "), ' руб.')), stat="identity") +
#   geom_line(aes(y=total, x=date, color='Итого', text=paste0('Продажи, всего, ', as.yearmon(date), ': ', format(total, big.mark=" "), ' руб.'),
#                 group=1),
#             size=1.2) +
#   xlab('') +
#   ylab(ed) +
#   scale_fill_manual(values = colors, name='') +
#   scale_x_date(breaks='6 months', labels = scales::label_date("%b-%y"), expand=expansion(add = 10)) +
#   scale_color_manual(values = c("Итого" = "#008272"), name='') +
#   theme(legend.position="bottom")
# t <- ggplotly(p, tooltip='text') %>%
#   config(displayModeBar = F, locale = 'ru') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)") %>%
#   layout(legend = list(orientation = "h", x = 0, y = -0.1))
# for (i in 1:length(t$x$data)) {
#   t$x$data[[i]]$name <- str_sub(str_replace_all(t$x$data[[i]]$name, regex('[//(//)0-9]*'), ''), 1, -2)
# }
# t
}
runApp()
shiny::runApp()
shiny::runApp()
