empty_plot <- function(title = NULL, x, y){
p <- plotly_empty(type = "scatter", mode = "markers") %>%
config(
displayModeBar = FALSE
) %>%
layout(
title = list(
text = title,
font = list(size=15),
yref = "paper",
y = y,
x = x
)
)
return(p)
}
combo3 <- empty_plot("Баланс затрат и выгод ОЦМ еще не рассчитан", x = 0.5, y=0.5) %>%  layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
}
combo3 %>% config(displayModeBar = F)
}
runApp()
balance_plot <- function(data) {
deltas <- data$meanImpact
if (!is.null(deltas)) {
vals <- round(c(deltas$d_tax_implied, deltas$d_prod, deltas$d_fot, -deltas$marking_cost)/10^9,1)
df <- data.frame(
desc=c('Налоги', 'Выручка', 'ФОТ', 'Издержки', 'Итого'),
value=c(vals, sum(vals))
)
df$desc <- factor(df$desc, levels = df$desc)
df$id <- seq_along(df$value)
df$type <- ifelse(df$value > 0, "in", "out")
df[df$desc %in% c("Итого"), "type"] <- "net"
df$end <- cumsum(df$value)
df$end <- c(head(df$end, -1), 0)
df$start <- c(0, head(df$end, -1))
df <- df[, c(3, 1, 4, 6, 5, 2)]
balance <- ggplot(df) +
geom_rect(aes(x = desc, fill = type, xmin = id - 0.4, xmax = id + 0.4, ymin = end, ymax = start, text=
paste0(desc, ': ', value, ' млрд руб.')
)) +
geom_segment(data = df[1:(nrow(df) -1),], aes(x = id + 0.4,
xend = id + 0.6,
y = end,
yend = end), col='darkgray') +
geom_text(aes(x=desc, y=start+(end-start)/2, label=paste0(value)), color="black", size=4) +
coord_flip() +
# ggtitle('Баланс затрат и выгод') +
ylab('млрд руб.') +
xlab(NULL) +
scale_fill_manual(values=c("in"="#B0E3AB", "out"="#F9AAB0", "net"='#C7E0F4')) +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5))
balance <- ggplotly(balance, tooltip='text') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
balance$x$data[[7]]$hoverinfo <- "none"
df2 <- df %>%
filter(desc == 'Налоги') %>%
pull(value)
taxStruct = data$taxStruct
df2 = data.frame(value = round(df2 * (taxStruct %>% pull(structure)),1),
name = taxStruct %>% pull(type))
df2 <- df2[order(df2$value, decreasing=T),]
df2 <- df2[c(2:nrow(df2),1),]
df2$id <- seq_along(df2$value)
df2$name <- factor(df2$name, levels = df2$name)
df2$type <- ifelse(df2$value > 0, "in", "out")
df2[df2$name %in% c("Всего"), "type"] <- "net"
df2$end <- cumsum(df2$value)
df2$end <- c(head(df2$end, -1), 0)
df2$start <- c(0, head(df2$end, -1))
df2 <- df2[, c(3, 1, 4, 6, 5, 2)]
balance_tax <- df2 %>%
ggplot() +
geom_rect(aes(x = name, fill = type, xmin = id - 0.4, xmax = id + 0.4, ymin = end, ymax = start, text=
paste0(name, ': ', value, ' млрд руб.')
)) +
geom_segment(data = df2[1:(nrow(df2) -1),], aes(x = id + 0.4,
xend = id + 0.6,
y = end,
yend = end), col='darkgray') +
geom_text(aes(x=name, y=start+(end-start)/2, label=paste0(value)), color="black", size=4) +
coord_flip() +
# ggtitle('Прирост налоговых поступлений') +
ylab('млрд руб.') +
xlab(NULL) +
scale_fill_manual(values=c("in"="#B0E3AB", "out"="#F9AAB0", "net"='#C7E0F4')) +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5))
balance_tax
balance_tax <- ggplotly(balance_tax, tooltip='text') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
balance_tax$x$data[[8]]$hoverinfo <- "none"
balance_tax
# balance
empl_fig <- plot_ly(
domain = list(x = c(0.25, 0.5), y = c(0.8, 1)),
type = "indicator",
mode = "delta",
gauge = list(shape = "bullet"),
delta = list(reference = 0, font = list(size=18, family='Segoe UI', color='#323130')),
value = round(deltas$d_empl),
title = list(text = "Занятость, чел.", font = list(size=18, family='Segoe UI', color='#323130')),
# height = 150
)
capacity_fig <- plot_ly(
domain = list(x = c(0.5, 0.75), y = c(0.8, 1)),
type = "indicator",
mode = "delta",
gauge = list(shape = "bullet"),
delta = list(reference = 1, relative=TRUE, font = list(size=18, family='Segoe UI', color='#323130')),
value = 1 + round(deltas$d_cap_implied,2)/100,
title= list(text = "Загрузка мощностей", font = list(size=18, family='Segoe UI', color='#323130')),
# height = 150
)
# capacity_fig
combo2 <- subplot(empl_fig, capacity_fig, nrows=2) %>%  layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
# combo2
combo3 <- subplot(combo2, balance, nrows=2, titleY = TRUE, which_layout=2, heights=c(0.25,0.75)) %>%  layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
# combo3
annotations = list(
list(
x = 0.5,
y = 0.95,
text = 'Баланс затрат и выгод',
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE,
font = list(size = 18)
),
list(
x = 0.5,
y = 0.45,
text = "Прирост налоговых поступлений по статьям",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE,
font = list(size = 18)
)
)
combo4 <- subplot(combo3, balance_tax, nrows=2, titleY = TRUE, margin = 0.05, heights=c(0.5,0.5)) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
} else {
empty_plot <- function(title = NULL, x, y){
p <- plotly_empty(type = "scatter", mode = "markers") %>%
config(
displayModeBar = FALSE
) %>%
layout(
title = list(
text = title,
font = list(size=15),
yref = "paper",
y = y,
x = x
)
)
return(p)
}
combo4 <- empty_plot("Баланс затрат и выгод ОЦМ еще не рассчитан", x = 0.5, y=0.5) %>%  layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
}
combo4 %>% config(displayModeBar = F)
}
runApp()
runApp()
runApp()
runApp()
combo4 <- subplot(combo3, balance_tax, nrows=2, titleY = TRUE, heights=c(0.5,0.5)) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,   margin = 0.01,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
combo4 <- subplot(combo3, balance_tax, nrows=2, titleY = TRUE, heights=c(0.5,0.5)) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,   margin = 0.1,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
combo4 <- subplot(combo3, balance_tax, nrows=2, titleY = TRUE, heights=c(0.5,0.5), margin=0.1) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,   margin = 0,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
runApp()
runApp()
combo4 <- subplot(combo3, balance_tax, nrows=2) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,   margin = 0,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
runApp()
combo4 <- subplot(combo3, balance_tax, nrows=2) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
combo4 <- subplot(combo3, balance_tax, nrows=2) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE, margin=0.15,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
combo4 <- subplot(combo3, balance_tax, nrows=2) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE, margin=0.25,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
combo4 <- subplot(combo3, balance_tax, nrows=2) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE, margin=1,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
combo4 <- subplot(combo3, balance_tax, nrows=2) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
# combo3
annotations = list(
list(
x = 0.5,
y = 1,
text = 'Баланс затрат и выгод',
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE,
font = list(size = 18)
),
list(
x = 0.5,
y = 0.45,
text = "Прирост налоговых поступлений по статьям",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE,
font = list(size = 18)
)
)
combo4 <- subplot(combo3, balance_tax, nrows=2) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
# combo3
annotations = list(
list(
x = 0.5,
y = 1.03,
text = 'Баланс затрат и выгод',
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE,
font = list(size = 18)
),
list(
x = 0.5,
y = 0.48,
text = "Прирост налоговых поступлений по статьям",
xref = "paper",
yref = "paper",
xanchor = "center",
yanchor = "bottom",
showarrow = FALSE,
font = list(size = 18)
)
)
combo4 <- subplot(combo3, balance_tax, nrows=2) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
runApp()
combo4 <- subplot(combo3, balance_tax, nrows=2) %>%  layout(annotations=annotations, plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
combo4
runApp()
deltas <- data$meanImpact
vals <- round(c(deltas$d_tax_implied, deltas$d_prod, deltas$d_fot, -deltas$marking_cost)/10^9,1)
df <- data.frame(
desc=c('Налоги', 'Выручка', 'ФОТ', 'Издержки', 'Итого'),
value=c(vals, sum(vals))
)
df2 <- df %>%
filter(desc == 'Налоги') %>%
pull(value)
taxStruct = data$taxStruct
df2 = data.frame(value = round(df2 * (taxStruct %>% pull(structure)),1),
name = taxStruct %>% pull(type))
df2 <- df2[order(df2$value, decreasing=T),]
df2 <- df2[c(2:nrow(df2),1),]
df2$id <- seq_along(df2$value)
df2$name <- factor(df2$name, levels = df2$name)
df2$type <- ifelse(df2$value > 0, "in", "out")
df2[df2$name %in% c("Всего"), "type"] <- "net"
df2$end <- cumsum(df2$value)
df2$end <- c(head(df2$end, -1), 0)
df2$start <- c(0, head(df2$end, -1))
df2 <- df2[, c(3, 1, 4, 6, 5, 2)]
balance_tax <- df2 %>%
ggplot() +
geom_rect(aes(x = name, fill = type, xmin = id - 0.4, xmax = id + 0.4, ymin = end, ymax = start, text=
paste0(name, ': ', value, ' млрд руб.')
)) +
geom_segment(data = df2[1:(nrow(df2) -1),], aes(x = id + 0.4,
xend = id + 0.6,
y = end,
yend = end), col='darkgray') +
geom_text(aes(x=name, y=start+(end-start)/2, label=paste0(value)), color="black", size=4) +
coord_flip() +
# ggtitle('Прирост налоговых поступлений') +
ylab('млрд руб.') +
xlab(NULL) +
scale_fill_manual(values=c("in"="#B0E3AB", "out"="#F9AAB0", "net"='#C7E0F4')) +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5))
balance_tax
balance_tax <- ggplotly(balance_tax, tooltip='text') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
balance_tax$x$data[[8]]$hoverinfo <- "none"
balance_tax
balance_plot <- function(data) {
deltas <- data$meanImpact
if (!is.null(deltas)) {
vals <- round(c(deltas$d_tax_implied, deltas$d_prod, deltas$d_fot, -deltas$marking_cost)/10^9,1)
df <- data.frame(
desc=c('Налоги', 'Выручка', 'ФОТ', 'Издержки', 'Итого'),
value=c(vals, sum(vals))
)
df$desc <- factor(df$desc, levels = df$desc)
df$id <- seq_along(df$value)
df$type <- ifelse(df$value > 0, "in", "out")
df[df$desc %in% c("Итого"), "type"] <- "net"
df$end <- cumsum(df$value)
df$end <- c(head(df$end, -1), 0)
df$start <- c(0, head(df$end, -1))
df <- df[, c(3, 1, 4, 6, 5, 2)]
balance <- ggplot(df) +
geom_rect(aes(x = desc, fill = type, xmin = id - 0.4, xmax = id + 0.4, ymin = end, ymax = start, text=
paste0(desc, ': ', value, ' млрд руб.')
)) +
geom_segment(data = df[1:(nrow(df) -1),], aes(x = id + 0.4,
xend = id + 0.6,
y = end,
yend = end), col='darkgray') +
geom_text(aes(x=desc, y=start+(end-start)/2, label=paste0(value)), color="black", size=4) +
coord_flip() +
ggtitle('Баланс затрат и выгод') +
ylab('млрд руб.') +
xlab(NULL) +
scale_fill_manual(values=c("in"="#B0E3AB", "out"="#F9AAB0", "net"='#C7E0F4')) +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5))
balance <- ggplotly(balance, tooltip='text') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
balance$x$data[[7]]$hoverinfo <- "none"
# df2 <- df %>%
#   filter(desc == 'Налоги') %>%
#   pull(value)
#
# taxStruct = data$taxStruct
# df2 = data.frame(value = round(df2 * (taxStruct %>% pull(structure)),1),
#                  name = taxStruct %>% pull(type))
# df2 <- df2[order(df2$value, decreasing=T),]
# df2 <- df2[c(2:nrow(df2),1),]
# df2$id <- seq_along(df2$value)
# df2$name <- factor(df2$name, levels = df2$name)
# df2$type <- ifelse(df2$value > 0, "in", "out")
# df2[df2$name %in% c("Всего"), "type"] <- "net"
#
# df2$end <- cumsum(df2$value)
# df2$end <- c(head(df2$end, -1), 0)
# df2$start <- c(0, head(df2$end, -1))
# df2 <- df2[, c(3, 1, 4, 6, 5, 2)]
#
# balance_tax <- df2 %>%
#   ggplot() +
#   geom_rect(aes(x = name, fill = type, xmin = id - 0.4, xmax = id + 0.4, ymin = end, ymax = start, text=
#                   paste0(name, ': ', value, ' млрд руб.')
#   )) +
#   geom_segment(data = df2[1:(nrow(df2) -1),], aes(x = id + 0.4,
#                                                 xend = id + 0.6,
#                                                 y = end,
#                                                 yend = end), col='darkgray') +
#   geom_text(aes(x=name, y=start+(end-start)/2, label=paste0(value)), color="black", size=4) +
#   coord_flip() +
#   # ggtitle('Прирост налоговых поступлений') +
#   ylab('млрд руб.') +
#   xlab(NULL) +
#   scale_fill_manual(values=c("in"="#B0E3AB", "out"="#F9AAB0", "net"='#C7E0F4')) +
#   theme(legend.position = 'none', plot.title = element_text(hjust = 0.5))
# balance_tax
# balance_tax <- ggplotly(balance_tax, tooltip='text') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
#                                                         autosize = T, dragmode=FALSE,
#                                                         xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
# balance_tax$x$data[[8]]$hoverinfo <- "none"
#
# balance_tax
# balance
empl_fig <- plot_ly(
domain = list(x = c(0.25, 0.5), y = c(0.8, 1)),
type = "indicator",
mode = "delta",
gauge = list(shape = "bullet"),
delta = list(reference = 0, font = list(size=18, family='Segoe UI', color='#323130')),
value = round(deltas$d_empl),
title = list(text = "Занятость, чел.", font = list(size=18, family='Segoe UI', color='#323130')),
# height = 150
)
capacity_fig <- plot_ly(
domain = list(x = c(0.5, 0.75), y = c(0.8, 1)),
type = "indicator",
mode = "delta",
gauge = list(shape = "bullet"),
delta = list(reference = 1, relative=TRUE, font = list(size=18, family='Segoe UI', color='#323130')),
value = 1 + round(deltas$d_cap_implied,2)/100,
title= list(text = "Загрузка мощностей", font = list(size=18, family='Segoe UI', color='#323130')),
# height = 150
)
# capacity_fig
combo2 <- subplot(empl_fig, capacity_fig, nrows=2) %>%  layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
# combo2
combo3 <- subplot(combo2, balance, nrows=2, titleY = TRUE, which_layout=2, heights=c(0.25,0.75)) %>%  layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
} else {
empty_plot <- function(title = NULL, x, y){
p <- plotly_empty(type = "scatter", mode = "markers") %>%
config(
displayModeBar = FALSE
) %>%
layout(
title = list(
text = title,
font = list(size=15),
yref = "paper",
y = y,
x = x
)
)
return(p)
}
combo3 <- empty_plot("Баланс затрат и выгод ОЦМ еще не рассчитан", x = 0.5, y=0.5) %>%  layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
}
combo3 %>% config(displayModeBar = F)
}
balance_plot(data)
tax_delta_structure <- function(data) {
deltas <- data$meanImpact
if (!is.null(deltas)) {
vals <- round(c(deltas$d_tax_implied, deltas$d_prod, deltas$d_fot, -deltas$marking_cost)/10^9,1)
df <- data.frame(
desc=c('Налоги', 'Выручка', 'ФОТ', 'Издержки', 'Итого'),
value=c(vals, sum(vals))
)
df2 <- df %>%
filter(desc == 'Налоги') %>%
pull(value)
taxStruct = data$taxStruct
df2 = data.frame(value = round(df2 * (taxStruct %>% pull(structure)),1),
name = taxStruct %>% pull(type))
df2 <- df2[order(df2$value, decreasing=T),]
df2 <- df2[c(2:nrow(df2),1),]
df2$id <- seq_along(df2$value)
df2$name <- factor(df2$name, levels = df2$name)
df2$type <- ifelse(df2$value > 0, "in", "out")
df2[df2$name %in% c("Всего"), "type"] <- "net"
df2$end <- cumsum(df2$value)
df2$end <- c(head(df2$end, -1), 0)
df2$start <- c(0, head(df2$end, -1))
df2 <- df2[, c(3, 1, 4, 6, 5, 2)]
balance_tax <- df2 %>%
ggplot() +
geom_rect(aes(x = name, fill = type, xmin = id - 0.4, xmax = id + 0.4, ymin = end, ymax = start, text=
paste0(name, ': ', value, ' млрд руб.')
)) +
geom_segment(data = df2[1:(nrow(df2) -1),], aes(x = id + 0.4,
xend = id + 0.6,
y = end,
yend = end), col='darkgray') +
geom_text(aes(x=name, y=start+(end-start)/2, label=paste0(value)), color="black", size=4) +
coord_flip() +
ggtitle('Прирост налоговых поступлений') +
ylab('млрд руб.') +
xlab(NULL) +
scale_fill_manual(values=c("in"="#B0E3AB", "out"="#F9AAB0", "net"='#C7E0F4')) +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5))
balance_tax
balance_tax <- ggplotly(balance_tax, tooltip='text') %>% layout(plot_bgcolor  = "rgba(0, 0, 0, 0)", paper_bgcolor = "rgba(0, 0, 0, 0)",
autosize = T, dragmode=FALSE,
xaxis = list(fixedrange = TRUE), yaxis = list(fixedrange = TRUE))
balance_tax$x$data[[8]]$hoverinfo <- "none"
}
balance_tax
}
tax_delta_structure(data)
runApp()
runApp()
# product category keys
keys <- data.frame(read_xlsx('data_inputs/key_market.xlsx'))
shiny::runApp()
